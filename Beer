#!/usr/bin/env perl

use Mojolicious::Lite;
use File::Path qw/mkpath/;
use IO::Dir;

mkpath app->home.'/data/beer';

post '/beer/create' => sub {
    my $c        = shift;
    my $filename = $c->param('name');
    $filename =~ tr/a-zA-Z//dc;
    my $data = Mojo::JSON->new->encode( $c->req->params->to_hash );
    Mojo::Asset::File->new()->add_chunk($data)
      ->move_to( $c->app->home . "/data/beer/$filename" );
    $c->redirect_to('beer/browse');
};

get '/beer/browse' => sub {
    my $c = shift;
    my @beers =
      grep { $_ !~ /^\./ } IO::Dir->new( $c->app->home . '/data/beer' )->read;
    $c->stash( beers => \@beers );
} => "beer/browse";

get '/beer/view/*key' => [ key => qr/[0-9a-zA-Z]+/ ] => sub {
    my $c = shift;
    my $file = $c->app->home . "/data/beer/" . $c->stash("key");
    my $beer = -e $file ? Mojo::JSON->new->decode(
        Mojo::Asset::File->new( path => $file)->slurp
    ) : { "no such beer" => "beer ".$c->stash("key") };
    $c->stash(beer => $beer );
} => "beer/view";

plugin toto => menu => [
   beer => {
       many => [qw/search browse create/],
       one  => [qw/view update delete/],
     },
     brewery => {
       many => [qw/find phonelist mailing_list/],
       one  => [qw/directions beers info/],
     },
     pub => {
       many => [qw/browse search map/],
       one  => [qw/info comments/],
    } ];

app->start;

